#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace netframework.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IdentityServer4Admin")]
	public partial class mofDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCE_LOV(CE_LOV instance);
    partial void UpdateCE_LOV(CE_LOV instance);
    partial void DeleteCE_LOV(CE_LOV instance);
    partial void InsertCE_LOVGroup(CE_LOVGroup instance);
    partial void UpdateCE_LOVGroup(CE_LOVGroup instance);
    partial void DeleteCE_LOVGroup(CE_LOVGroup instance);
    #endregion
		
		public mofDataContext() : 
				base(global::netframework.Properties.Settings.Default.IdentityServer4AdminConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public mofDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mofDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mofDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public mofDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CE_LOV> CE_LOVs
		{
			get
			{
				return this.GetTable<CE_LOV>();
			}
		}
		
		public System.Data.Linq.Table<CE_LOVGroup> CE_LOVGroups
		{
			get
			{
				return this.GetTable<CE_LOVGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tb.CE_LOV")]
	public partial class CE_LOV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LOVKey;
		
		private string _LOVGroupCode;
		
		private string _LOVCode;
		
		private string _LOVValue;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private bool _IsCanceled;
		
		private string _OrderNo;
		
		private EntityRef<CE_LOVGroup> _CE_LOVGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOVKeyChanging(long value);
    partial void OnLOVKeyChanged();
    partial void OnLOVGroupCodeChanging(string value);
    partial void OnLOVGroupCodeChanged();
    partial void OnLOVCodeChanging(string value);
    partial void OnLOVCodeChanged();
    partial void OnLOVValueChanging(string value);
    partial void OnLOVValueChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnIsCanceledChanging(bool value);
    partial void OnIsCanceledChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    #endregion
		
		public CE_LOV()
		{
			this._CE_LOVGroup = default(EntityRef<CE_LOVGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long LOVKey
		{
			get
			{
				return this._LOVKey;
			}
			set
			{
				if ((this._LOVKey != value))
				{
					this.OnLOVKeyChanging(value);
					this.SendPropertyChanging();
					this._LOVKey = value;
					this.SendPropertyChanged("LOVKey");
					this.OnLOVKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVGroupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LOVGroupCode
		{
			get
			{
				return this._LOVGroupCode;
			}
			set
			{
				if ((this._LOVGroupCode != value))
				{
					if (this._CE_LOVGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOVGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._LOVGroupCode = value;
					this.SendPropertyChanged("LOVGroupCode");
					this.OnLOVGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LOVCode
		{
			get
			{
				return this._LOVCode;
			}
			set
			{
				if ((this._LOVCode != value))
				{
					this.OnLOVCodeChanging(value);
					this.SendPropertyChanging();
					this._LOVCode = value;
					this.SendPropertyChanged("LOVCode");
					this.OnLOVCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVValue", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LOVValue
		{
			get
			{
				return this._LOVValue;
			}
			set
			{
				if ((this._LOVValue != value))
				{
					this.OnLOVValueChanging(value);
					this.SendPropertyChanging();
					this._LOVValue = value;
					this.SendPropertyChanged("LOVValue");
					this.OnLOVValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCanceled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCanceled
		{
			get
			{
				return this._IsCanceled;
			}
			set
			{
				if ((this._IsCanceled != value))
				{
					this.OnIsCanceledChanging(value);
					this.SendPropertyChanging();
					this._IsCanceled = value;
					this.SendPropertyChanged("IsCanceled");
					this.OnIsCanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CE_LOVGroup_CE_LOV", Storage="_CE_LOVGroup", ThisKey="LOVGroupCode", OtherKey="LOVGroupCode", IsForeignKey=true)]
		public CE_LOVGroup CE_LOVGroup
		{
			get
			{
				return this._CE_LOVGroup.Entity;
			}
			set
			{
				CE_LOVGroup previousValue = this._CE_LOVGroup.Entity;
				if (((previousValue != value) 
							|| (this._CE_LOVGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CE_LOVGroup.Entity = null;
						previousValue.CE_LOVs.Remove(this);
					}
					this._CE_LOVGroup.Entity = value;
					if ((value != null))
					{
						value.CE_LOVs.Add(this);
						this._LOVGroupCode = value.LOVGroupCode;
					}
					else
					{
						this._LOVGroupCode = default(string);
					}
					this.SendPropertyChanged("CE_LOVGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tb.CE_LOVGroup")]
	public partial class CE_LOVGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LOVGroupCode;
		
		private string _LOVGroupName;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<CE_LOV> _CE_LOVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOVGroupCodeChanging(string value);
    partial void OnLOVGroupCodeChanged();
    partial void OnLOVGroupNameChanging(string value);
    partial void OnLOVGroupNameChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public CE_LOVGroup()
		{
			this._CE_LOVs = new EntitySet<CE_LOV>(new Action<CE_LOV>(this.attach_CE_LOVs), new Action<CE_LOV>(this.detach_CE_LOVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVGroupCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string LOVGroupCode
		{
			get
			{
				return this._LOVGroupCode;
			}
			set
			{
				if ((this._LOVGroupCode != value))
				{
					this.OnLOVGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._LOVGroupCode = value;
					this.SendPropertyChanged("LOVGroupCode");
					this.OnLOVGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOVGroupName", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LOVGroupName
		{
			get
			{
				return this._LOVGroupName;
			}
			set
			{
				if ((this._LOVGroupName != value))
				{
					this.OnLOVGroupNameChanging(value);
					this.SendPropertyChanging();
					this._LOVGroupName = value;
					this.SendPropertyChanged("LOVGroupName");
					this.OnLOVGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CE_LOVGroup_CE_LOV", Storage="_CE_LOVs", ThisKey="LOVGroupCode", OtherKey="LOVGroupCode")]
		public EntitySet<CE_LOV> CE_LOVs
		{
			get
			{
				return this._CE_LOVs;
			}
			set
			{
				this._CE_LOVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CE_LOVs(CE_LOV entity)
		{
			this.SendPropertyChanging();
			entity.CE_LOVGroup = this;
		}
		
		private void detach_CE_LOVs(CE_LOV entity)
		{
			this.SendPropertyChanging();
			entity.CE_LOVGroup = null;
		}
	}
}
#pragma warning restore 1591
